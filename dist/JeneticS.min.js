class JeneticS{constructor(t){this.culture=null,this.settings={mutationRate:.01,population:500,crossoverMethod:"all",elitism:.1,eliteMutationMultiplier:5};for(let e in t)this.settings[e]=t[e];this.load=function(t){"Culture"==typeof t&&(this.culture=t)},this.save=function(t){},this.innoculate=function(t,e=this.settings.population){return this.settings.population=e,this.culture=new Culture(t,e),this.culture},this.health=function(){let t=[];return this.culture.citizens.forEach(e=>{t.push(e.dna.join(""))}),t},this.run=function(){let t=this;return{generation:function(){t.culture.naturalSelection(),t.culture.normalize(),t.culture.crossover()[t.settings.crossoverMethod](),t.culture.mutate(t.settings.mutationRate,t.settings.elitism,t.settings.eliteMutationMultiplier)},continuous:function(){}}}}}class Culture{constructor(t,e){if(isNaN(e))throw"Please use a number";if("function"!=typeof t)throw"Expected function as first argument. Please define a function to create citizens.";this.population=e,this.best=null,this.fitnessRange={low:1/0,high:-1/0},this.citizens=[],this.census=[],this.nextGeneration=[];for(let n=0;n<e;n++)this.citizens.push(t(n)),this.census.push(n);this.genCensus=function(){return this.census.length!==this.citizens.length?Array.apply(null,Array(this.citizens.length)).map((t,e)=>e):this.census},this.naturalSelection=function(){this.best=null,this.fitnessRange.low=1/0,this.fitnessRange.high=-1/0,this.liveOneEpoch()},this.crossover=function(){let t=this;function e(){for(;;){let e,n=t.util.random();for(let i=0;i<t.citizens.length;i++){if(n<(e=t.citizen(i)).weighted)return e;n-=e.weighted}}}function n(){let t=e();return[e(),t]}function i(e,n=!1){if(e&&e.length){let i=t.util.floor(e.length/2);return n?e.slice(0,i):e.slice(i)}return[]}function s(e){let[s,o]=n(),h=new Agent({live:s.live,mutate:s.mutate});s=i(s.dna,!0),o=i(o.dna),h.dna=s.concat(o),t.nextGeneration.push(h)}function o(e){let[i,s]=n(),o=new Agent({live:i.live,mutate:i.mutate});o.dna=i.dna.filter((t,e)=>e%2==0).reduce(function(t,e,n){return t.concat(e,s.dna.filter((t,e)=>e%2==1)[n])},[]);let h=s.dna.length,u=i.dna.length;h<u?o.dna.concat(i.dna.slice(h)):o.dna.concat(s.dna.slice(u)),o.dna=o.dna.filter(function(t){return void 0!=t}),t.nextGeneration.push(o)}function h(e){t.util.randFloor(10)%2?s():o()}function u(e){for(t.nextGeneration=[];t.nextGeneration.length<t.population;)e(t.nextGeneration.length)}return{all:function(){u(h)},half:function(){u(s)},alternate:function(){u(o)}}},this.mutate=function(t,e,n=2){for(let e=1;e<this.nextGeneration.length;e++){let n=this.nextGeneration[e];n.mutate(n,t)}let i=this.util.floor(this.population*e);for(let e=1;e<i;e++){let e=this.best.copy();e.mutate(e,t*n),this.nextGeneration.push(e)}this.nextGeneration.push(this.best),this.citizens=this.nextGeneration,this.census=this.genCensus()},this.citizen=function(t){return this.citizens[this.census[t]]},this.shuffle=function(){for(var t,e,n=this.census.length;n;)e=Math.floor(Math.random()*len--),t=this.census[n],this.census[n]=this.census[e],this.census[e]=t},this.liveOneEpoch=function(){for(let t=0;t<this.citizens.length;t++){let e=this.citizen(t);e.live(e),this.fitnessRange.low=e.score<this.fitnessRange.low?e.score:this.fitnessRange.low,e.score>this.fitnessRange.high&&(this.fitnessRange.high=e.score,this.best=e.copy())}},this.normalize=function(){let t=0;for(let e=0;e<this.citizens.length;e++){let n=this.citizen(e);n.score=this.util.map(n.score,2*this.fitnessRange.low/3,1.5*this.fitnessRange.high,0,100),t+=n.score}for(let e=0;e<this.citizens.length;e++){let n=this.citizen(e);n.weighted=n.score/t}},this.util={map:function(t,e,n,i,s){return(t-e)*(s-i)/(n-e)+i},random:Math.random,floor:Math.floor,randFloor:function(t){return this.floor(this.random()*t)}}}}class Agent{constructor({live:t,mutate:e,weighted:n,score:i,type:s,dna:o,config:h}){if(!t||"function"!=typeof t)throw new Error("Agents need a live function.");if(!e||"function"!=typeof e)throw new Error("Agents need a mutate function.");this.score=i||1,this.type=s||null,this.weighted=n||1,this.dna=o||[],this.config=h||{},this.live=t,this.mutate=e}set(t,e){return this[t]=e,this}copy(){return new Agent({live:this.live,mutate:this.mutate,type:this.type,score:1,weighted:this.weighted,dna:this.dna,config:this.config})}live(){return this.live(this)}mutate(t){return this.mutate(this,t)}}